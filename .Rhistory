above15_wrong <- wrong %>%
filter(City.Or.County %in% unique(above15$City.Or.County)) %>%
bind_rows(killed_2019_above15)
above15_wrong %>%
group_by(City.Or.County) %>%
summarise(Num = n())
above15 %>%
group_by(City.Or.County) %>%
summarise(Num = n())
View(above15)
View(above15_wrong)
wrong <- read_csv("data/Homeboy Dropoff - above15_04202018-04202023.csv")
above15_wrong <- wrong %>%
filter(City.Or.County %in% unique(above15$City.Or.County)) %>%
bind_rows(killed_2019_above15)
336+18
above15_wrong <- wrong %>%
filter(City.Or.County %in% unique(above15$City.Or.County))
check <- read_csv("data/OFFICER INVOLVED OFFICER KILLED IN 2019.csv") %>%
filter(`City Or County` %in% above15_list$City.Or.County | `City Or County` %in% c("Bronx", "Brooklyn", "Corona (Queens)", "New York (Manhattan)", "Staten Island"))
View(killed_2019_above15)
View(above15_list)
View(above10_old)
View(above15_list)
View(clean_2020)
View(clean_2020)
View(clean_rest)
View(above15_list)
result <- clean %>%
filter((City.Or.County %in% above15_list$City.Or.County) |
(State == "New York" &
City.Or.County %in% c("Bronx", "Brooklyn", "Corona (Queens)", "New York (Manhattan)", "Staten Island")))
above10_old <- read_csv("data/Homeboy Dropoff - above10_04202020-04202023.csv") %>%
filter(City.Or.County %in% above15_list$City.Or.County)
above10_old$Incident.Date <- lubridate::mdy(above10_old$Incident.Date)
above15 <- result %>%
filter(!(City.Or.County %in% above10_list$City.Or.County) |
!(Incident.Date <= "2023-04-20" & Incident.Date >= "2020-04-20")) %>%
bind_rows(above10_old)
above15 <- result %>%
filter(!(City.Or.County %in% above10_list$City.Or.County) |
!(Incident.Date <= "2023-04-20" & Incident.Date >= "2020-04-20"))
View(above15)
above15_true <- result %>%
filter(City.Or.County %in% above15_list$City.Or.County)
above15 <- result %>%
filter(!(City.Or.County %in% above10_list$City.Or.County) |
!(Incident.Date <= "2023-04-20" & Incident.Date >= "2020-04-20")) %>%
bind_rows(above10_old)
above15_true <- result %>%
filter(City.Or.County %in% above15_list$City.Or.County | City.Or.County %in% c("Bronx", "Brooklyn", "Corona (Queens)", "New York (Manhattan)", "Staten Island"))
above15_wrong <- wrong %>%
filter(City.Or.County %in% unique(above15$City.Or.County)) %>%
bind_rows(killed_2019_above15)
write_csv(above15_wrong, "data/above15_04202018-04202023.csv")
View(above15)
View(above15_true)
View(above10_list)
a <- setdiff(above10_list$City.Or.County, above15_list$City.Or.County)
above10_below15 <- result %>%
filter(City.Or.County %in% setdiff(above10_list$City.Or.County, above15_list$City.Or.County))
setdiff(above10_list$City.Or.County, above15_list$City.Or.County)
above10 <- result %>%
filter(City.Or.County %in% above10_list$City.Or.County | City.Or.County %in% c("Bronx", "Brooklyn", "Corona (Queens)", "New York (Manhattan)", "Staten Island"))
above15 <- result %>%
filter(City.Or.County %in% above15_list$City.Or.County | City.Or.County %in% c("Bronx", "Brooklyn", "Corona (Queens)", "New York (Manhattan)", "Staten Island"))
unique(above10$City.Or.County)
unique(above15$City.Or.County)
# STEP 7 Take out the expanded data of 04202018-04202023
# NYC is listed as five boroughs - it only makes sense to group them as other cities were considered separately
above15 <- clean %>%
filter((City.Or.County %in% above15_list$City.Or.County) |
(State == "New York" &
City.Or.County %in% c("Bronx", "Brooklyn", "Corona (Queens)", "New York (Manhattan)", "Staten Island")))
## ---------------------------
##
## Script name: merge2
## Purpose of script: Expand the 04202020-04202023 data created through merge.R and sort.R script to 04202018-04202023
## Author: Cal Chengqi Fang
## Date Created: 2023-07-07
##
## Copyright (c) Cal Chengqi Fang, 2023
## Email: cal.cf@uchicago.edu
##
## ---------------------------
##
## Notes:
##
##
## ---------------------------
## set working directory for Mac and PC
setwd("/Users/atchoo/Desktop/Homeboy")  # Cal's working directory (mac)
# setwd("C:/Users/")     # Cal's working directory (PC)
## ---------------------------
rm(list = ls())
options(scipen = 6, digits = 4)         # I prefer to view outputs in non-scientific notation
memory.limit(30000000)                  # this is needed on some PCs to increase memory allowance, but has no impact on macs.
## ---------------------------
## load up the packages we will need:  (uncomment as required)
require(tidyverse)
require(data.table)
# source("functions/packages.R")        # loads up all the packages we need
## ---------------------------
# STEP 1 Read in the cleaned 04202018-12312018 file
clean_2018 <- read_csv("data/clean_2018.csv")
# STEP 2 Create a tibble for 01012019-12312019 records
injured_2019 <- read.csv("data/OFFICER INVOLVED OFFICER INJURED IN 2019.csv",
colClasses = c("character", "character", "character", "character", "character", "character", "NULL", "NULL")) %>%
mutate(Outcome = "Injured") %>%
as_tibble()
injured_2019$Incident.Date <- lubridate::mdy(injured_2019$Incident.Date)
killed_2019 <- read.csv("data/OFFICER INVOLVED OFFICER KILLED IN 2019.csv",
colClasses = c("character", "character", "character", "character", "character", "character", "NULL", "NULL")) %>%
mutate(Outcome = "Killed") %>%
as_tibble()
killed_2019$Incident.Date <- lubridate::mdy(killed_2019$Incident.Date)
clean_2019 <- rbind(injured_2019, killed_2019)
# STEP 3 Create a tibble for 01012020-04192020 records
injured_2020 <- read.csv("data/OFFICER INVOLVED OFFICER INJURED IN 2020.csv",
colClasses = c("character", "character", "character", "character", "character", "character", "NULL", "NULL")) %>%
mutate(Outcome = "Injured") %>%
as_tibble()
injured_2020$Incident.Date <- lubridate::mdy(injured_2020$Incident.Date)
killed_2020 <- read.csv("data/OFFICER INVOLVED OFFICER KILLED IN 2020.csv",
colClasses = c("character", "character", "character", "character", "character", "character", "NULL", "NULL")) %>%
mutate(Outcome = "Killed") %>%
as_tibble()
killed_2020$Incident.Date <- lubridate::mdy(killed_2020$Incident.Date)
clean_2020 <- rbind(injured_2020, killed_2020) %>%
filter(Incident.Date < "2020-04-20")
# STEP 4 Read in the cleaned 04202020-04202023 file
clean_rest <- read_csv("data/Homeboy Dropoff - GVA_04202020-04202023.csv")
clean_rest$Incident.Date <- lubridate::mdy(clean_rest$Incident.Date)
# STEP 5 Combine all four tibbles together
clean <- bind_rows(clean_2018, clean_2019, clean_2020, clean_rest)
# STEP 6 Identify candidate cities
above10_list <- clean %>%
group_by(City.Or.County, State) %>%
summarise(casenum = n()) %>%
filter(casenum >= 10)
above15_list <- above10_list %>%
filter(casenum >= 15)
# STEP 7 Take out the expanded data of 04202018-04202023
# NYC is listed as five boroughs - it only makes sense to group them as other cities were considered separately
above15 <- clean %>%
filter((City.Or.County %in% above15_list$City.Or.County) |
(State == "New York" &
City.Or.County %in% c("Bronx", "Brooklyn", "Corona (Queens)", "New York (Manhattan)", "Staten Island")))
write_csv(above15, "data/above15_04202018-04202023.csv")
above10_below15 <- above15 %>%
filter(City.Or.County %in% setdiff(above10_list$City.Or.County, above15_list$City.Or.County))
View(above10_below15)
setdiff(above10_list$City.Or.County, above15_list$City.Or.County)
View(above10_list)
View(above15_list)
above10_below15 <- clean %>%
filter(City.Or.County %in% setdiff(above10_list$City.Or.County, above15_list$City.Or.County))
View(above10_below15)
above10_below15 <- clean %>%
filter(City.Or.County %in% setdiff(above10_list$City.Or.County, above15_list$City.Or.County))
write_csv(above10_below15, "data/above10_below15_04202018-04202023.csv")
above10_below15 <- clean %>%
filter(City.Or.County %in% setdiff(above10_list$City.Or.County, unique(above15$City.Or.County)))
write_csv(above10_below15, "data/above10_below15_04202018-04202023.csv")
write_csv(above10_below15, "data/above10_below15_04202018-04202023.csv")
above10_below15 <- clean %>%
filter(City.Or.County %in% setdiff(above10_list$City.Or.County, unique(above15$City.Or.County))) %>%
filter(!(City.Or.County == "Columbus" & State == "Georgia"))
unique(above10_below15$City.Or.County)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("Homeboy Dropoff - above10_04202018-04202023.csv")[, 1:8]
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv")[, 1:8]
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv")[, 1:8]
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Response.type)
View(above10)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv")
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Response.type)
as.factor(above10$Response.type)
above10$Response.type <- as.factor(above10$Resopnse.type)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv")
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Resopnse.type)
View(above10)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(grepl('uicide', Detail))
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Resopnse.type)
View(above10)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(!grepl('uicide', Detail))
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Resopnse.type)
## ---------------------------
##
## Script name: merge2
## Purpose of script: Expand the 04202020-04202023 data created through merge.R and sort.R script to 04202018-04202023
## Author: Cal Chengqi Fang
## Date Created: 2023-07-07
##
## Copyright (c) Cal Chengqi Fang, 2023
## Email: cal.cf@uchicago.edu
##
## ---------------------------
##
## Notes:
##
##
## ---------------------------
## set working directory for Mac and PC
setwd("/Users/atchoo/Desktop/Homeboy")  # Cal's working directory (mac)
# setwd("C:/Users/")     # Cal's working directory (PC)
## ---------------------------
rm(list = ls())
options(scipen = 6, digits = 4)         # I prefer to view outputs in non-scientific notation
memory.limit(30000000)                  # this is needed on some PCs to increase memory allowance, but has no impact on macs.
## ---------------------------
## load up the packages we will need:  (uncomment as required)
require(tidyverse)
require(data.table)
# source("functions/packages.R")        # loads up all the packages we need
## ---------------------------
# STEP 1 Read in the cleaned 04202018-12312018 file
clean_2018 <- read_csv("data/clean_2018.csv")
# STEP 2 Create a tibble for 01012019-12312019 records
injured_2019 <- read.csv("data/OFFICER INVOLVED OFFICER INJURED IN 2019.csv",
colClasses = c("character", "character", "character", "character", "character", "character", "NULL", "NULL")) %>%
mutate(Outcome = "Injured") %>%
as_tibble()
injured_2019$Incident.Date <- lubridate::mdy(injured_2019$Incident.Date)
killed_2019 <- read.csv("data/OFFICER INVOLVED OFFICER KILLED IN 2019.csv",
colClasses = c("character", "character", "character", "character", "character", "character", "NULL", "NULL")) %>%
mutate(Outcome = "Killed") %>%
as_tibble()
killed_2019$Incident.Date <- lubridate::mdy(killed_2019$Incident.Date)
clean_2019 <- rbind(injured_2019, killed_2019)
# STEP 3 Create a tibble for 01012020-04192020 records
injured_2020 <- read.csv("data/OFFICER INVOLVED OFFICER INJURED IN 2020.csv",
colClasses = c("character", "character", "character", "character", "character", "character", "NULL", "NULL")) %>%
mutate(Outcome = "Injured") %>%
as_tibble()
injured_2020$Incident.Date <- lubridate::mdy(injured_2020$Incident.Date)
killed_2020 <- read.csv("data/OFFICER INVOLVED OFFICER KILLED IN 2020.csv",
colClasses = c("character", "character", "character", "character", "character", "character", "NULL", "NULL")) %>%
mutate(Outcome = "Killed") %>%
as_tibble()
killed_2020$Incident.Date <- lubridate::mdy(killed_2020$Incident.Date)
clean_2020 <- rbind(injured_2020, killed_2020) %>%
filter(Incident.Date < "2020-04-20")
# STEP 4 Read in the cleaned 04202020-04202023 file
clean_rest <- read_csv("data/Homeboy Dropoff - GVA_04202020-04202023.csv")
clean_rest$Incident.Date <- lubridate::mdy(clean_rest$Incident.Date)
# STEP 5 Combine all four tibbles together
clean <- bind_rows(clean_2018, clean_2019, clean_2020, clean_rest)
# STEP 6 Identify candidate cities
above10_list <- clean %>%
group_by(City.Or.County, State) %>%
summarise(casenum = n()) %>%
filter(casenum >= 10)
View(above10_list)
above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(!grepl('uicide', Detail))
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Resopnse.type)
above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count)
df <- above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count)
func <- function(z) if (is.numeric(z)) sum(z) else ''
sumrow <- as.data.frame(lapply(df, func))
knitr::kable(rbind(cbind(' '=' ', df),
cbind(' '='Total', sumrow)))
df <- above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count)
df %>%
summarise(across(where(is.character), ~"Total"),
across(where(is.numeric), ~sum(., na.rm = T)))
df <- above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count)
func <- function(z) if (is.numeric(z)) sum(z) else ''
df %>%
bind_rows(as.data.frame(lapply(df, func)))
func <- function(z) if (is.numeric(z)) sum(z) else ''
df <- above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count)
View(df)
func <- function(z) if (is.numeric(z)) sum(z) else ''
sumrow <- as.data.frame(lapply(df, func))
View(sumrow)
func <- function(z) if (is.numeric(z)) sum(z) else ''
df <- above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count)
func <- function(z) if (is.numeric(z)) sum(z, na.rm=TRUE) else ''
sumrow <- as.data.frame(lapply(df, func))
knitr::kable(rbind(df, sumrow))
rbind(df, sumrow)
cbind(df, sumrow)
above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count) %>%
mutate(Total = sum(2019:2022))
above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count) %>%
mutate(Total = sum(`2019`:`2022`))
above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count) %>%
mutate(Total = sum(c(`2019`, `2022`), na.rm=TRUE)) %>%
knitr::kable()
above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count) %>%
mutate(Total = sum(c(`2019`, `2020`, `2021`, `2022`, `2023`), na.rm=TRUE)) %>%
knitr::kable()
summary <- above10 %>%
group_by(City.Or.County, Response.type) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Resopnse.type, values_from = Count)
summary <- above10 %>%
group_by(City.Or.County, Response.type) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Response.type, values_from = Count)
View(summary)
unique(above10$Resopnse.type)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(!grepl('uicide', Detail))
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
summary <- above10 %>%
group_by(City.Or.County, Response.type) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Response.type, values_from = Count) %>%
mutate(Total = sum(c(Unknown, `Police Self-transfer`, Others, Ambulance), na.rm=TRUE))
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(!grepl('uicide', Detail))
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
summary <- above10 %>%
group_by(City.Or.County, Response.type) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Response.type, values_from = Count) %>%
mutate(Total = sum(c(Unknown, `Police Self-transfer`, Others, Ambulance), na.rm=TRUE))
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
View(above10)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(!grepl('uicide', Detail))
above10$Incident.Date <- as.Date(above10$Incident.Date, "%m/%d/%y")
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
summary <- above10 %>%
group_by(City.Or.County, Response.type) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Response.type, values_from = Count) %>%
mutate(Total = sum(c(Unknown, `Police Self-transfer`, Others, Ambulance), na.rm=TRUE))
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Resopnse.type)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(!grepl('uicide', Detail))
above10$Incident.Date <- as.Date(above10$Incident.Date, "%m/%d/%y")
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
summary <- above10 %>%
group_by(City.Or.County, Response.type) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Response.type, values_from = Count) %>%
mutate(Total = sum(c(Unknown, `Police Self-transfer`, Others, Ambulance), na.rm=TRUE))
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Response.type)
View(summary)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(!grepl('uicide', Detail))
above10$Incident.Date <- as.Date(above10$Incident.Date, "%m/%d/%y")
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
temp <- above10 %>%
group_by(City.Or.County, Response.type) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Response.type, values_from = Count) %>%
mutate(Total = sum(c(Unknown, `Police Self-transfer`, Others, Ambulance), na.rm=TRUE)) %>%
filter(Unknown <= 0.25*Total)
above10 <- above10 %>%
filter(City.Or.County %in% temp$City.Or.County)
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Response.type)
View(above10)
View(temp)
View(temp)
rm(list = ls())
library(tidyverse)
above10 <- read_csv("data/Homeboy Dropoff - above10_04202018-04202023.csv") %>%
filter(!grepl('uicide', Detail))
above10$Incident.Date <- as.Date(above10$Incident.Date, "%m/%d/%y")
above10below15_exceptNYC <- c("Indianapolis", "Washington", "Columbus", "Albuquerque", "Atlanta", "Denver", "San Antonio", "Detroit", "Louisville",  "Birmingham", "New Orleans")
temp <- above10 %>%
group_by(City.Or.County, Response.type) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Response.type, values_from = Count) %>%
mutate(Total = sum(c(Unknown, `Police Self-transfer`, Others, Ambulance), na.rm=TRUE)) %>%
filter(Unknown <= 0.25*Total)
above10_2 <- above10
above10 <- above10 %>%
filter(City.Or.County %in% temp$City.Or.County |
City.Or.County %in% c("Bronx", "Brooklyn", "Corona (Queens)", "New York (Manhattan)", "Staten Island"))
above10$City.Or.County <- as.factor(above10$City.Or.County)
above10$Year <- format(above10$Incident.Date, "%Y")
above10$Response.type <- as.factor(above10$Response.type)
above10 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count) %>%
mutate(Total = sum(c(`2019`, `2020`, `2021`, `2022`, `2023`), na.rm=TRUE)) %>%
knitr::kable()
above10_2 %>%
group_by(State, City.Or.County, Year) %>%
summarise(Count = n()) %>%
pivot_wider(names_from = Year, values_from = Count) %>%
mutate(Total = sum(c(`2019`, `2020`, `2021`, `2022`, `2023`), na.rm=TRUE)) %>%
knitr::kable()
sum(above10$Response.type == "Police Self-transfer")
147/300
View(df)
colSums(is.na(read.csv("/Users/atchoo/Documents/GitHub/CMSC35300_FinalProject/diabetes_NHANES_1999_2004.csv")))
colSums(is.na(read.csv("/Users/atchoo/Documents/GitHub/CMSC35300_FinalProject/diabetes_NHANES_1999_2004.csv")))
colSums(is.na(read.csv("/Users/atchoo/Documents/GitHub/CMSC35300_FinalProject/diabetes_NHANES_1999_2004.csv")))
load("results/cleaned.Rdata")
View(carecredit_clean)
## ---------------------------
# STEP 1
# Load the data
carecredit <- read_csv("results/carecredit.csv") %>%
distinct() %>%
rename(address=address1,
specialty=specialties)
require(tidyverse)
## ---------------------------
# STEP 1
# Load the data
carecredit <- read_csv("results/carecredit.csv") %>%
distinct() %>%
rename(address=address1,
specialty=specialties)
## set working directory for Mac and PC
setwd("/Users/atchoo/Documents/GitHub/MedicalCreditCard")  # Cal's working directory (mac)
require(tidyverse)
## ---------------------------
# STEP 1
# Load the data
carecredit <- read_csv("results/carecredit.csv") %>%
distinct() %>%
rename(address=address1,
specialty=specialties)
View(carecredit)
carecredit %>% group_by(location, name) %>% summarize(n = 1) %>% nrow()
